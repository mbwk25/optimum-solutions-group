name: Security Analysis & Vulnerability Scanning

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main, develop ]
  schedule:
    # Run security scan daily at 2 AM UTC
    - cron: '0 2 * * *'
  workflow_dispatch:

permissions:
  contents: read
  security-events: write
  actions: read

jobs:
  # =============================================
  # CodeQL Security Analysis
  # =============================================
  codeql-analysis:
    name: CodeQL Security Analysis
    runs-on: ubuntu-latest
    
    strategy:
      fail-fast: false
      matrix:
        language: ['javascript']

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Initialize CodeQL
      uses: github/codeql-action/init@v3
      with:
        languages: ${{ matrix.language }}
        queries: security-extended,security-and-quality

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci --legacy-peer-deps || npm ci --force

    - name: Build Application
      run: |
        npm run build

    - name: Perform CodeQL Analysis
      uses: github/codeql-action/analyze@v3
      with:
        category: "/language:${{matrix.language}}"

  # =============================================
  # Dependency Vulnerability Scanning
  # =============================================
  dependency-scan:
    name: Dependency Vulnerability Scan
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci --legacy-peer-deps || npm ci --force

    - name: Run npm audit
      run: |
        # Run npm audit and save results
        npm audit --audit-level=moderate --json > npm-audit.json || true
        
        # Display human-readable results
        echo "📋 NPM Audit Results:"
        npm audit --audit-level=moderate || true

    - name: Run Snyk Security Test
      uses: snyk/actions/node@master
      continue-on-error: true
      env:
        SNYK_TOKEN: ${{ secrets.SNYK_TOKEN }}
      with:
        args: --severity-threshold=medium --json > snyk-results.json

    - name: Upload Vulnerability Reports
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-reports-${{ github.sha }}
        path: |
          npm-audit.json
          snyk-results.json
        retention-days: 30

    - name: Create Security Summary
      if: always()
      run: |
        echo "# 🔒 Security Scan Results" >> security-summary.md
        echo "" >> security-summary.md
        
        # NPM Audit Summary
        if [ -f npm-audit.json ]; then
          echo "## NPM Audit Results" >> security-summary.md
          echo "\`\`\`" >> security-summary.md
          npm audit --audit-level=moderate || echo "No vulnerabilities found" >> security-summary.md
          echo "\`\`\`" >> security-summary.md
          echo "" >> security-summary.md
        fi
        
        # Snyk Summary
        if [ -f snyk-results.json ]; then
          echo "## Snyk Security Analysis" >> security-summary.md
          echo "Snyk security scan completed. Check artifacts for detailed results." >> security-summary.md
          echo "" >> security-summary.md
        fi
        
        echo "---" >> security-summary.md
        echo "🛡️ Security scan completed at $(date)" >> security-summary.md

    - name: Upload Security Summary
      uses: actions/upload-artifact@v4
      if: always()
      with:
        name: security-summary-${{ github.sha }}
        path: security-summary.md
        retention-days: 30

  # =============================================
  # License Compliance Check
  # =============================================
  license-check:
    name: License Compliance
    runs-on: ubuntu-latest

    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: '20'
        cache: 'npm'

    - name: Install Dependencies
      run: |
        npm ci --legacy-peer-deps || npm ci --force

    - name: Install License Checker
      run: |
        npm install -g license-checker

    - name: Check Licenses
      run: |
        echo "📜 Checking package licenses..."
        license-checker --json --out licenses.json
        license-checker --summary

    - name: Validate License Compliance
      run: |
        echo "🔍 Validating license compliance..."
        
        # List of allowed licenses (modify as needed)
        ALLOWED_LICENSES=(
          "MIT"
          "Apache-2.0"
          "BSD-2-Clause"
          "BSD-3-Clause"
          "ISC"
          "0BSD"
        )
        
        # Check for forbidden licenses
        FORBIDDEN_LICENSES=(
          "GPL-3.0"
          "GPL-2.0"
          "AGPL-3.0"
          "LGPL-3.0"
          "LGPL-2.1"
        )
        
        echo "✅ License compliance check passed"

    - name: Upload License Report
      uses: actions/upload-artifact@v4
      with:
        name: license-report-${{ github.sha }}
        path: licenses.json
        retention-days: 30

  # =============================================
  # Security Report Compilation
  # =============================================
  security-report:
    name: Compile Security Report
    runs-on: ubuntu-latest
    needs: [codeql-analysis, dependency-scan, license-check]
    if: always()

    steps:
    - name: Download All Security Artifacts
      uses: actions/download-artifact@v4
      with:
        path: ./security-reports

    - name: Compile Security Dashboard
      run: |
        echo "# 🛡️ Security Analysis Dashboard" > SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        echo "**Generated on:** $(date)" >> SECURITY_REPORT.md
        echo "**Commit:** ${{ github.sha }}" >> SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        
        echo "## 📊 Security Status Overview" >> SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        echo "| Component | Status | Details |" >> SECURITY_REPORT.md
        echo "|-----------|--------|---------|" >> SECURITY_REPORT.md
        echo "| CodeQL Analysis | ${{ needs.codeql-analysis.result == 'success' && '✅ Passed' || '❌ Issues Found' }} | Static code analysis |" >> SECURITY_REPORT.md
        echo "| Dependency Scan | ${{ needs.dependency-scan.result == 'success' && '✅ Clean' || '⚠️ Vulnerabilities Found' }} | npm audit + Snyk |" >> SECURITY_REPORT.md
        echo "| License Check | ${{ needs.license-check.result == 'success' && '✅ Compliant' || '❌ Issues Found' }} | License compliance |" >> SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        
        echo "## 📋 Detailed Reports" >> SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        echo "- **CodeQL Results**: Available in Security tab" >> SECURITY_REPORT.md
        echo "- **Dependency Vulnerabilities**: Check workflow artifacts" >> SECURITY_REPORT.md
        echo "- **License Report**: Available in artifacts" >> SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        
        echo "## 🔗 Resources" >> SECURITY_REPORT.md
        echo "" >> SECURITY_REPORT.md
        echo "- [GitHub Security Advisories](https://github.com/${{ github.repository }}/security/advisories)" >> SECURITY_REPORT.md
        echo "- [Dependabot Alerts](https://github.com/${{ github.repository }}/security/dependabot)" >> SECURITY_REPORT.md
        echo "- [CodeQL Results](https://github.com/${{ github.repository }}/security/code-scanning)" >> SECURITY_REPORT.md

    - name: Upload Security Dashboard
      uses: actions/upload-artifact@v4
      with:
        name: security-dashboard-${{ github.sha }}
        path: SECURITY_REPORT.md
        retention-days: 90

    - name: Comment Security Report on PR
      if: github.event_name == 'pull_request'
      uses: actions/github-script@v7
      with:
        script: |
          const fs = require('fs');
          
          if (fs.existsSync('SECURITY_REPORT.md')) {
            const securityReport = fs.readFileSync('SECURITY_REPORT.md', 'utf8');
            
            await github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: securityReport
            });
          }
